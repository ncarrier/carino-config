# if any logic must be added in this file, it _must_ be reduced to the minimum
# in any case, this script must stay idempotent, for a given PWD

# directories holding produced files, which can be removed safely
if [ "${CARINO_VERSION_TYPE}" = "release" ]; then
	# the release script must start from a clean state and thus removes all
	# the artifacts of previous builds, we don't wan't to force a dev to
	# rebuild all if he wants to resume developing after having issued a
	# release
	export OUT_DIR=${PWD}/out-release
else
	# debug version
	export OUT_DIR=${PWD}/out
fi
export BUILD_DIR=${OUT_DIR}/build
export STAGING_DIR=${OUT_DIR}/staging
export STAGING_HOST_DIR=${OUT_DIR}/staging.host
export FINAL_DIR=${OUT_DIR}/final
export BOOT_DIR=${OUT_DIR}/boot
export U_BOOT_DIR=${OUT_DIR}/u-boot

# source directories
export CONFIG_DIR=${PWD}/config
export PACKAGES_DIR=${PWD}/packages
export BUILD_SCRIPTS_DIR=${PWD}/build_scripts

# used only when releasing a version
export VERSIONS_DIR=versions

# set to an empty string to disable ccache for both target and host builds
CCACHE=ccache

# toolchain related information
export TOOLCHAIN_PREFIX=arm-linux-gnueabihf
export LIBC_DIR=/usr/arm-linux-gnueabihf/lib/
CROSS_CC="${CCACHE} ${TOOLCHAIN_PREFIX}-gcc"
CROSS_CXX="${CCACHE} ${TOOLCHAIN_PREFIX}-g++"
CROSS_AR=${TOOLCHAIN_PREFIX}-ar
CROSS_AS=${TOOLCHAIN_PREFIX}-as
CROSS_LD=${TOOLCHAIN_PREFIX}-ld
CROSS_PKG_CONFIG_PATH=${STAGING_DIR}/lib/pkgconfig/
CROSS_PKG_CONFIG=${TOOLCHAIN_PREFIX}-pkg-config

# in MB, for sd image. rootfs size will be IMAGE_SIZE - BOOT_PARTITION_SIZE
IMAGE_SIZE=70
BOOT_PARTITION_SIZE=10

# base flags for cross-compilation, passed in CFLAGS to the modules, which must
# then append their own flags
# choose optimisation level by uncommenting the right line
if [ "${CARINO_VERSION_TYPE}" = "release" ]; then
	CROSS_CFLAGS="-Os" # -Os or O2 ?
else
	# debug version
	CROSS_CFLAGS="-O0 -g -Wall -Wextra"
fi
CROSS_CPPFLAGS="-I${STAGING_DIR}/include/"
CROSS_LDFLAGS="-L${STAGING_DIR}/lib/ -Wl,-rpath-link=${STAGING_DIR}/lib"

# base flags for host tools compilation, passed in CFLAGS to the modules, which
# must then append their own flags
# choose optimisation level by uncommenting the right line
HOST_PKG_CONFIG_PATH=${STAGING_HOST_DIR}/lib/pkgconfig
#HOST_CFLAGS="-O0 -g"
HOST_CFLAGS="-O2"
HOST_CPPFLAGS="-I${STAGING_HOST_DIR}/include/"
HOST_LDFLAGS="-L${STAGING_HOST_DIR}/lib/ -Wl,-rpath-link=${STAGING_HOST_DIR}/lib"
HOST_PKG_CONFIG=pkg-config

# for building the android application(s)
export JAVA_HOME="/usr/lib/jvm/java-7-openjdk-amd64"
export ANDROID_SDK="/home/nicolas/Logiciels/adt-bundle-linux-x86_64-20130729/sdk/"

# add path to host tools built
export PATH="${STAGING_HOST_DIR}/bin/:${PATH}"
